syntax = "proto3";
package merlin.valsetpref.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "merlin/valset-pref/v1beta1/state.proto";

option go_package = "github.com/merlinslair/merlin/x/valset-pref/types";

// Msg defines the valset-pref modules's gRPC message service.
service Msg {
  // SetValidatorSetPreference creates a set of validator preference.
  // This message will process both create + update request.
  rpc SetValidatorSetPreference(MsgSetValidatorSetPreference)
      returns (MsgSetValidatorSetPreferenceResponse);

  // DelegateToValidatorSet gets the owner, coins and delegates to a
  // validator-set.
  rpc DelegateToValidatorSet(MsgDelegateToValidatorSet)
      returns (MsgDelegateToValidatorSetResponse);

  // UndelegateFromValidatorSet gets the owner and coins and undelegates from
  // validator-set. The unbonding logic will follow the `Undelegate` logic from
  // the sdk.
  rpc UndelegateFromValidatorSet(MsgUndelegateFromValidatorSet)
      returns (MsgUndelegateFromValidatorSetResponse);

  // RedelegateValidatorSet takes the existing validator set and redelegates to
  // a new set.
  rpc RedelegateValidatorSet(MsgRedelegateValidatorSet)
      returns (MsgRedelegateValidatorSetResponse);

  // WithdrawDelegationRewards allows users to claim rewards from the
  // validator-set.
  rpc WithdrawDelegationRewards(MsgWithdrawDelegationRewards)
      returns (MsgWithdrawDelegationRewardsResponse);

  // DelegateBondedTokens allows users to break the lockup bond and delegate
  // mer tokens to a predefined validator-set.
  rpc DelegateBondedTokens(MsgDelegateBondedTokens)
      returns (MsgDelegateBondedTokensResponse);
}

// MsgCreateValidatorSetPreference is a list that holds validator-set.
message MsgSetValidatorSetPreference {
  // delegator is the user who is trying to create a validator-set.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];

  // list of {valAddr, weight} to delegate to
  repeated ValidatorPreference preferences = 2 [
    (gogoproto.moretags) = "yaml:\"preferences\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSetValidatorSetPreferenceResponse {}

// MsgDelegateToValidatorSet allows users to delegate to an existing
// validator-set
message MsgDelegateToValidatorSet {
  // delegator is the user who is trying to delegate.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];

  // the amount of tokens the user is trying to delegate.
  // For ex: delegate 10mer with validator-set {ValA -> 0.5, ValB -> 0.3, ValC
  // -> 0.2} our staking logic would attempt to delegate 5mer to A , 3mer to
  // B, 2mer to C.
  cosmos.base.v1beta1.Coin coin = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message MsgDelegateToValidatorSetResponse {}

message MsgUndelegateFromValidatorSet {
  // delegator is the user who is trying to undelegate.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];

  // the amount the user wants to undelegate
  // For ex: Undelegate 10mer with validator-set {ValA -> 0.5, ValB -> 0.3,
  // ValC
  // -> 0.2} our undelegate logic would attempt to undelegate 5mer from A ,
  // 3mer from B, 2mer from C
  cosmos.base.v1beta1.Coin coin = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message MsgUndelegateFromValidatorSetResponse {}

message MsgRedelegateValidatorSet {
  // delegator is the user who is trying to create a validator-set.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];

  // list of {valAddr, weight} to delegate to
  repeated ValidatorPreference preferences = 2 [
    (gogoproto.moretags) = "yaml:\"preferences\"",
    (gogoproto.nullable) = false
  ];
}

message MsgRedelegateValidatorSetResponse {}

// MsgWithdrawDelegationRewards allows user to claim staking rewards from the
// validator set.
message MsgWithdrawDelegationRewards {
  // delegator is the user who is trying to claim staking rewards.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];
}

message MsgWithdrawDelegationRewardsResponse {}

// MsgDelegateBondedTokens breaks bonded lockup (by ID) of mer, of
// length <= 2 weeks and takes all that mer and delegates according to
// delegator's current validator set preference.
message MsgDelegateBondedTokens {
  // delegator is the user who is trying to force unbond mer and delegate.
  string delegator = 1 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];
  // lockup id of mer in the pool
  uint64 lockID = 2;
}

message MsgDelegateBondedTokensResponse {}